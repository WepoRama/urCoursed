// Generated by CoffeeScript 1.6.2
(function() {
  var comments, host, lectures, logActivity, pass, port, restify, saveComment, serveComments, server, user;

  restify = require('restify');

  host = process.env['DOTCLOUD_DB_MONGODB_HOST'] || 'localhost';

  port = process.env['DOTCLOUD_DB_MONGODB_PORT'] || 27017;

  port = parseInt(port);

  user = process.env['DOTCLOUD_DB_MONGODB_LOGIN'] || void 0;

  pass = process.env['DOTCLOUD_DB_MONGODB_PASSWORD'] || void 0;

  server = restify.createServer({
    name: 'chattycat',
    version: '1.0.0'
  });

  server.use(restify.acceptParser(server.acceptable));

  server.use(restify.queryParser());

  server.use(restify.bodyParser());

  server.use(restify.jsonp());

  comments = [
    {
      text: 'fine this one',
      author: 'him'
    }, {
      text: 'fine this two',
      author: 'me'
    }, {
      text: 'fine this three',
      author: 'other'
    }, {
      text: 'fine this four',
      author: 'somebody'
    }
  ];

  lectures = [
    {
      url: 'http://www.youtube.com/watch?v=WuiHuZq_cg4',
      name: 'one',
      author: 'us',
      id: 1
    }, {
      url: 'http://www.youtube.com/watch?v=1OALSkJGsRw',
      name: 'two',
      author: 'us',
      id: 2
    }
  ];

  server.get('/api/', function(req, res, next) {
    console.log('api call');
    res.send({
      api: ['dbstatus', 'lectures', 'lecture', 'comments']
    });
    return next();
  });

  server.get('/api/dbstatus/', function(req, res, next) {
    console.log('checking status');
    res.send({
      status: 'static',
      detail: 'no database connected'
    });
    return next();
  });

  server.get('/api/lectures/:course', function(req, res, next) {
    console.log('Reading lectures:');
    console.log(lectures);
    res.send({
      data: lectures
    });
    return next();
  });

  server.get('/api/comments/:lecture', function(req, res, next) {
    console.log('Reading comments');
    console.log(req.params.lecture);
    console.log(comments);
    res.send({
      data: comments
    });
    return next();
  });

  server.post('/api/comments/:lecture', function(req, res, next) {
    console.log('Putting lecture in comments only');
    console.log(req);
    res.send({
      data: comments
    });
    return next();
  });

  serveComments = function(req, res, next) {
    console.log('Serving comments for lecture');
    console.log(req.params);
    if (!req.params.comment || req.params.comment === 'all') {
      res.send({
        data: comments
      });
    } else {
      res.send({
        data: comments[req.params.comment]
      });
    }
    return next();
  };

  server.get('/api/lecture/:lecture/comment', serveComments);

  server.get('/api/lecture/:lecture/comment/:comment', serveComments);

  saveComment = function(req, res, next) {
    console.log('Putting comment in (alc)');
    console.log(req.params.data);
    comments.push(req.param.data);
    console.log("resulting in:");
    console.log(comments);
    res.send({
      data: comments
    });
    return next();
  };

  server.post('/api/lecture/:lecture/comment/:comment', saveComment);

  server.put('/api/lecture/:lecture/comment/:comment', saveComment);

  server.put('/api/lecture/:lecture', saveComment);

  server.post('/api/lecture/:lecture', saveComment);

  server.get('/api/lecture/:lecture', serveComments);

  logActivity = function(req, res, next) {
    console.log('LOggin Actgivitiy comment in (alc)');
    console.log(req);
    console.log(req.params);
    console.log(req.params.data);
    return res.send({
      data: comments
    });
  };

  server.put('/api/lecture/', logActivity);

  server.post('/api/lecture/', logActivity);

  server.get('/api/lecture/', logActivity);

  server.put('/api/lecture', logActivity);

  server.post('/api/lecture', logActivity);

  server.get('/api/lecture', logActivity);

  server.get(/\/web\/?.*/, restify.serveStatic({
    directory: '.'
  }));

  server.listen(8080, function() {
    return console.log('%s listening at %s', server.name, server.url);
  });

  /*
  app.get("/", function(req, res){
      var html = '<div id="content" data-stack="node" data-appname="' + process.env['DOTCLOUD_PROJECT'] + '">';
      html += 'Hello World, from Express!';
      html += '<script type="text/javascript" src="https://helloapp.dotcloud.com/inject.min.js"></script>';
  
      db.collection("test", function(err, collection){
          if(err) console.log(err);
          collection.find(function(err, cursor){
              if(err) console.log(err);
              res.send(html);
          });
      })
  });
  */


}).call(this);
